name: Windows Build (auto-detect code path)

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:
    inputs:
      backend:
        description: "Graphics backend (WIN32_OPENGL or WIN32_DX11)"
        required: false
        default: "WIN32_OPENGL"
      mode:
        description: "Build mode (package or build)"
        required: false
        default: "package"

jobs:
  build:
    runs-on: windows-latest
    timeout-minutes: 120

    env:
      BACKEND: ${{ github.event.inputs.backend || 'WIN32_OPENGL' }}
      MODE: ${{ github.event.inputs.mode || 'package' }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Show repo root (debug)
        shell: cmd
        run: |
          echo === Repo root (should be $GITHUB_WORKSPACE) ===
          dir /b
          echo.

      - name: Find code directory
        id: find-code
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const workspace = process.env.GITHUB_WORKSPACE;
            const tryPaths = ['code', path.join('4cc','code')];

            for (const p of tryPaths) {
              const full = path.join(workspace, p);
              if (fs.existsSync(full) && fs.statSync(full).isDirectory()) {
                core.setOutput('code-path', p.replace(/\\/g, '/'));
                console.log('Found code at', p);
                return;
              }
            }

            // quick recursive search (3 levels) for a 'code' dir
            function findCode(dir, depth) {
              if (depth < 0) return null;
              try {
                const entries = fs.readdirSync(dir, { withFileTypes: true });
                for (const e of entries) {
                  if (e.isDirectory() && e.name.toLowerCase() === 'code') return path.relative(workspace, path.join(dir, e.name)).replace(/\\/g, '/');
                }
                for (const e of entries) {
                  if (e.isDirectory()) {
                    const found = findCode(path.join(dir, e.name), depth - 1);
                    if (found) return found;
                  }
                }
              } catch (err) {}
              return null;
            }
            const found = findCode(workspace, 3);
            if (found) {
              core.setOutput('code-path', found);
              console.log('Found code at', found);
              return;
            }

            throw new Error("Could not find a 'code' directory in the repository (tried ./code, ./4cc/code and a recursive search). Please check repo layout.");

      - name: Print detected code-path
        shell: cmd
        run: |
          echo DETECTED_CODE_PATH=${{ steps.find-code.outputs.code-path }}
          dir ${{ steps.find-code.outputs.code-path }}

      - name: Setup MSVC (if present) and run build
        shell: cmd
        working-directory: ${{ steps.find-code.outputs.code-path }}
        run: |
          echo Running in %CD%
          echo BACKEND=%BACKEND% MODE=%MODE%

          if exist custom\bin\setup_cl_x64.bat (
            echo Found setup_cl_x64.bat - calling it now...
            call custom\bin\setup_cl_x64.bat
          ) else (
            echo WARNING: custom\bin\setup_cl_x64.bat not found - continuing but build may fail.
          )

          if /I "%MODE%"=="package" (
            if not exist bin\package.bat (
              echo ERROR: bin\package.bat not found in %CD%\bin
              exit /b 3
            )
            echo Calling: bin\package.bat /D%BACKEND%
            call bin\package.bat /D%BACKEND%
          ) else (
            if not exist bin\build.bat (
              echo ERROR: bin\build.bat not found in %CD%\bin
              exit /b 4
            )
            echo Calling: bin\build.bat /D%BACKEND%
            call bin\build.bat /D%BACKEND%
          )

      - name: List outputs (helpful for debugging)
        shell: cmd
        run: |
          echo === possible outputs (relative to repo root) ===
          if exist code\build ( echo code\build found & dir /s code\build ) else echo code\build not found
          if exist code\distributions ( echo code\distributions found & dir /s code\distributions ) else echo code\distributions not found
          if exist 4cc\code\build ( echo 4cc\code\build found & dir /s 4cc\code\build ) else echo 4cc\code\build not found
          if exist 4cc\code\distributions ( echo 4cc\code\distributions found & dir /s 4cc\code\distributions ) else echo 4cc\code\distributions not found

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.BACKEND }}-${{ env.MODE }}-artifacts
          path: |
            ${{ steps.find-code.outputs.code-path }}/build/**
            ${{ steps.find-code.outputs.code-path }}/distributions/**
            code/build/**
            code/distributions/**
            4cc/code/build/**
            4cc/code/distributions/**
